{"title":"常用的正则方法","date":"2020-10-12T08:10:14.000Z","slug":"常用的正则","tags":["常用"],"updated":"2020-11-25T05:59:03.742Z","content":"<ul>\n<li>简单匹配</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 删除当前字符串中的所有[]和空格，加上/g意味着全局匹配</span><br><span class=\"line\">&quot; [1, 2, 3, 4] &quot;.replace(/\\[|\\]|\\s/g,&quot;&quot;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const pattern = &apos;a&apos;;</span><br><span class=\"line\">const replacement = &apos;A&apos;</span><br><span class=\"line\">const str = &apos;aBCD&apos;</span><br><span class=\"line\">console.log(str.replace(pattern, replacement))// ABCD</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 每隔4个字符加空格间隔</span><br><span class=\"line\">function replaceStr(str) &#123;</span><br><span class=\"line\">    return str.replace(/(.&#123;4&#125;)/g,&apos;$1 &apos;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 小程序rich-text里多张图片自适应</span><br><span class=\"line\">this.setData(&#123;</span><br><span class=\"line\">   detail: res.data.replace(/\\&lt;img/gi, &apos;&lt;img style=&quot;max-width:100%;height:auto&quot; &apos;),</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>常用的正则方法</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 邮箱</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\">export function isEmail(s) &#123;</span><br><span class=\"line\">  return /^([a-zA-Z0-9._-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]&#123;2,3&#125;)&#123;1,2&#125;)$/.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 数字和字母</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\">export function numAndStr(s) &#123;</span><br><span class=\"line\">  return /^[0-9a-zA-Z]*$/g.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 手机号码</span><br><span class=\"line\"> * mobileNoInput</span><br><span class=\"line\"> * 校验输入不能为空</span><br><span class=\"line\"> * 只能输入数字。校验手机格式，第1位必须为1，总数是11位</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> * @return &#123;boolean&#125;</span><br><span class=\"line\"> */</span><br><span class=\"line\">export function isMobile(s) &#123;</span><br><span class=\"line\">  return /^(1)\\d&#123;10&#125;$/.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 电话号码</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\">export function isPhone(s) &#123;</span><br><span class=\"line\">  return /^([0-9]&#123;3,4&#125;-)?[0-9]&#123;7,8&#125;$/.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * URL地址</span><br><span class=\"line\"> * urlInput</span><br><span class=\"line\"> * 网址格式以http(s)://开头，网址内容中间必须包含.</span><br><span class=\"line\"> * 校验输入不能为空</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> * @return &#123;boolean&#125;</span><br><span class=\"line\"> */</span><br><span class=\"line\">export function isURL(s) &#123;</span><br><span class=\"line\">  return /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&amp;&apos;\\*\\+,;=.]+$/.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 银行卡</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> * @return &#123;boolean&#125;</span><br><span class=\"line\"> */</span><br><span class=\"line\">export function isBankCard(s) &#123;</span><br><span class=\"line\">  return /^([1-9]&#123;1&#125;)(\\d&#123;14&#125;|\\d&#123;15&#125;|\\d&#123;16&#125;|\\d&#123;17&#125;|\\d&#123;18&#125;)$/.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * BaseInput1.1</span><br><span class=\"line\"> * 中文+字母+数字</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\">export function baseInput1(s) &#123;</span><br><span class=\"line\">  return /^[\\u4E00-\\u9FA5A-Za-z0-9_]+$/.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * BaseInput1.2</span><br><span class=\"line\"> * 纯中文</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\">export function baseInput2(s) &#123;</span><br><span class=\"line\">  return /^[\\u4e00-\\u9fa5]+$/.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * BaseInput1.3</span><br><span class=\"line\"> * 纯正整数</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\">export function baseInput3(s) &#123;</span><br><span class=\"line\">  return /^[1-9]\\d*$/.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * BaseInput1.4</span><br><span class=\"line\"> * 纯小数</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\">export function baseInput4(s) &#123;</span><br><span class=\"line\">  // return /^[0-9]&#123;1&#125;([0-9]|[.])*$/.test(s)</span><br><span class=\"line\">  return /^(\\-)*(\\d+)\\.(\\d\\d).*$/.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 密码中必须包含大小写 字母、数字、特称字符，至少8个字符，最多30个字符；</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">export function isPwdInput1(s) &#123;</span><br><span class=\"line\">  let pwdRegex = new RegExp(`(?=.*[0-9])(?=.*[A-Z])(?=.*[a-z])(?=.*[^a-zA-Z0-9])`);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  return pwdRegex.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 密码中必须包含字母、数字；</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">export function isPwdInput2(s) &#123;</span><br><span class=\"line\">  let pwdRegex = /^(?!([a-zA-Z]+|\\d+)$)[a-zA-Z\\d]&#123;1,&#125;$/</span><br><span class=\"line\"></span><br><span class=\"line\">  return pwdRegex.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 密码中必须包含字母、符号；</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">export function isPwdInput3(s) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  let pwdRegex = new RegExp(/^(?=.*[a-zA-Z])(?=.*[:!@#$%^&amp;*()&lt;&gt;,.?-_+=`~·！@#￥%……&amp;*（）——\\-+=&#123;&#125;|《》？：“”&quot;【】『』「」、；‘&apos;，。、])[a-zA-Z!@#$%^&amp;*()&lt;&gt;,.?-_+=`~·！@#￥%……&amp;*（）——\\-+=&#123;&#125;|《》？:：&quot;“”【】「」、；‘&apos;，。、]&#123;6,&#125;$/);</span><br><span class=\"line\">  return pwdRegex.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 密码中必须包含数字、符号；</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">export function isPwdInput4(s) &#123;</span><br><span class=\"line\">  let pwdRegex1 = s.match(&apos;[A-Z]+&apos;)</span><br><span class=\"line\">  if (pwdRegex1) &#123;</span><br><span class=\"line\">    return</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    let pwdRegex = new RegExp(/^(?=.*[0-9])(?=.*[:!@#$%^&amp;*()&lt;&gt;,.?-_+=`~·！@#￥%……&amp;*（）——\\-+=&#123;&#125;|《》？：“”&quot;【】『』「」、；‘&apos;，。、])[0-9!@#$%^&amp;*()&lt;&gt;,.?-_+=`~·！@#￥%……&amp;*（）——\\-+=&#123;&#125;|《》？:：&quot;“”【】「」、；‘&apos;，。、]&#123;6,&#125;$/);</span><br><span class=\"line\">    return pwdRegex.test(s)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 密码中必须纯数字；</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">export function isPwdInput5(s) &#123;</span><br><span class=\"line\">  let pwdRegex = new RegExp(/^[0-9]*$/);</span><br><span class=\"line\">  return pwdRegex.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 密码中必须纯字母；</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">export function isPwdInput6(s) &#123;</span><br><span class=\"line\">  let pwdRegex = new RegExp(/^[a-zA-Z]&#123;1,&#125;$/);</span><br><span class=\"line\">  return pwdRegex.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 密码中必须纯字符；</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;*&#125; s</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">export function isPwdInput7(s) &#123;</span><br><span class=\"line\">  let pwdRegex = /^[`~!@#$%^&amp;*()_\\-+=&lt;&gt;?:&quot;&#123;&#125;|,.\\/;&apos;\\\\[\\]·~！@#￥%……&amp;*（）——\\-+=&#123;&#125;|《》？：“”【】、；‘&apos;，。、]+$/</span><br><span class=\"line\">  return pwdRegex.test(s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 校验当前字符串是否为一个纯字母</span><br><span class=\"line\"> * @date 2020-04-23</span><br><span class=\"line\"> * @param &#123;string&#125; value</span><br><span class=\"line\"> * @returns &#123;boolean&#125;</span><br><span class=\"line\"> */</span><br><span class=\"line\">export const isPureLetters = value =&gt; (value &amp;&amp; typeof value === &quot;string&quot; &amp;&amp; /^[a-zA-Z]+$/.test(value));</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 校验当前字符串是否为一个 中文 字母 数字 符号 组成的</span><br><span class=\"line\"> * @date 2020-04-23</span><br><span class=\"line\"> * @param &#123;string&#125; value</span><br><span class=\"line\"> * @returns &#123;boolean&#125;</span><br><span class=\"line\"> */</span><br><span class=\"line\">export const isChineseAndNumberAndLettersAndSymbol = value =&gt; (value &amp;&amp; typeof value === &quot;string&quot; &amp;&amp; /^[a-zA-Z0-9\\u4e00-\\u9fa5\\,\\.\\?，。？!！、\\~\\\\@#\\$%^&amp;\\*\\(\\)-_\\+=&#123;&#125;\\[\\]&quot;&quot;:&lt;&gt;|]+$/.test(value));</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 校验当前字符串是否为一个 中文 字母 空格 组成的</span><br><span class=\"line\"> * @date 2020-04-23</span><br><span class=\"line\"> * @param &#123;string&#125; value</span><br><span class=\"line\"> * @returns &#123;boolean&#125;</span><br><span class=\"line\"> */</span><br><span class=\"line\">export const isChineseAndLettersAndSpace = value =&gt; (value &amp;&amp; typeof value === &quot;string&quot; &amp;&amp; /^[a-zA-Z\\u4e00-\\u9fa5 ]+$/.test(value));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">* 校验身份证</span><br><span class=\"line\">* 校验输入不能为空</span><br><span class=\"line\">* 校验输入一定是18位，前17位为数字，最后一位是校验位，可能为数字或字符X。</span><br><span class=\"line\">* @date 2020-04-23</span><br><span class=\"line\">* @param &#123;string&#125; value</span><br><span class=\"line\">* @returns &#123;boolean&#125;</span><br><span class=\"line\">*/</span><br><span class=\"line\">export const isIdentityInput = (value) =&gt; &#123;</span><br><span class=\"line\">  const regExp = /^[1-9]\\d&#123;5&#125;(18|19|20|(3\\d))\\d&#123;2&#125;((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d&#123;3&#125;[0-9Xx]$/</span><br><span class=\"line\">  return regExp.test(value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">* 校验车牌号</span><br><span class=\"line\">* 校验输入不能为空</span><br><span class=\"line\">* 正常车牌校验输入只能是7位字符</span><br><span class=\"line\">* 新能源车牌校验输入只能是8位字符</span><br><span class=\"line\">* 新能源中的小型车，第一位：只能用字母D或字母F，第二位：字母或者数字，后四位：必须使用数字</span><br><span class=\"line\">* 新能源中大型车，前五位：必须使用数字，第六位：只能用字母D或字母F</span><br><span class=\"line\">* @date 2020-04-23</span><br><span class=\"line\">* @param &#123;string&#125; value</span><br><span class=\"line\">* @returns &#123;boolean&#125;</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">export const isTicketNoInput = (value) =&gt; &#123;</span><br><span class=\"line\">  const regExp = /^(([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-Z](([0-9]&#123;5&#125;[DF])|([DF]([A-HJ-NP-Z0-9])[0-9]&#123;4&#125;)))|([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-Z][A-HJ-NP-Z0-9]&#123;4&#125;[A-HJ-NP-Z0-9挂学警港澳使领]))$/;</span><br><span class=\"line\">  return regExp.test(value)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"2020-月度小结：11 月","slug":"2020-月度小结：11月"},"next":{"title":"Hello World","slug":"hello-world"},"link":"http://yoursite.com/post/常用的正则/"}