{"title":"常用的工具方法util","date":"2019-04-10T08:24:25.000Z","slug":"常用的工具方法util","tags":["javascript","常用"],"updated":"2020-10-12T08:46:24.017Z","content":"<h3 id=\"常用工具方法\"><a href=\"#常用工具方法\" class=\"headerlink\" title=\"常用工具方法\"></a>常用工具方法</h3><ul>\n<li>从 url 中获取参数</li>\n</ul>\n<p>1.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export default function(key)&#123;</span><br><span class=\"line\">  // 获取参数</span><br><span class=\"line\">  var url = window.location.search;</span><br><span class=\"line\">  // 正则筛选地址栏</span><br><span class=\"line\">  var reg = new RegExp(&quot;(^|&amp;)&quot;+ key +&quot;=([^&amp;]*)(&amp;|$)&quot;);</span><br><span class=\"line\">  // 匹配目标参数</span><br><span class=\"line\">  var result = url.substr(1).match(reg);</span><br><span class=\"line\">  // 返回参数值</span><br><span class=\"line\">  return result ? decodeURIComponent(result[2]) : null;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意： 如果 url 上需要传入特殊字符，需要进行转码，encodeURIComponent()</p>\n</blockquote>\n<p>2.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export const getQueryString = (name) =&gt; &#123;</span><br><span class=\"line\">    const val = qs.parse(history.location.search, &#123;ignoreQueryPrefix:true&#125;) || &#123;&#125;</span><br><span class=\"line\">    return val[name]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>时间格式化</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">dateObj: date对象</span><br><span class=\"line\">format:你想要格式化的格式 如：&quot;&apos;yyyy-MM-dd hh:mm:ss&quot;</span><br><span class=\"line\"> */</span><br><span class=\"line\">export default function format(dateObj,format) &#123;</span><br><span class=\"line\">    var date = &#123;</span><br><span class=\"line\">       &quot;M+&quot;: dateObj.getMonth() + 1,</span><br><span class=\"line\">       &quot;d+&quot;: dateObj.getDate(),</span><br><span class=\"line\">       &quot;h+&quot;: dateObj.getHours(),</span><br><span class=\"line\">       &quot;m+&quot;: dateObj.getMinutes(),</span><br><span class=\"line\">       &quot;s+&quot;: dateObj.getSeconds(),</span><br><span class=\"line\">       &quot;q+&quot;: Math.floor((dateObj.getMonth() + 3) / 3),</span><br><span class=\"line\">       &quot;S+&quot;: dateObj.getMilliseconds()</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    if (/(y+)/i.test(format)) &#123;</span><br><span class=\"line\">       format = format.replace(RegExp.$1, (dateObj.getFullYear() + &apos;&apos;).substr(4 - RegExp.$1.length));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for (var k in date) &#123;</span><br><span class=\"line\">       if (new RegExp(&quot;(&quot; + k + &quot;)&quot;).test(format)) &#123;</span><br><span class=\"line\">           format = format.replace(RegExp.$1, RegExp.$1.length == 1</span><br><span class=\"line\">              ? date[k] : (&quot;00&quot; + date[k]).substr((&quot;&quot; + date[k]).length));</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return format;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">//===============localStorage</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 清空localStorage</span><br><span class=\"line\"> * @return 无返回NULL</span><br><span class=\"line\"> */</span><br><span class=\"line\">export const clear = (key) =&gt; &#123;</span><br><span class=\"line\">    if (key) &#123;</span><br><span class=\"line\">        window.localStorage.removeItem(key);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        window.localStorage.clear();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 通过key从localStorage获取数据</span><br><span class=\"line\"> * @param  &#123;String&#125; key  获取数据的可以标识</span><br><span class=\"line\"> * @return &#123;String, Object&#125;  返回空，字符串或者对象</span><br><span class=\"line\"> */</span><br><span class=\"line\">export const get = (key) =&gt; &#123;</span><br><span class=\"line\">    const str = window.localStorage[key] || &quot;&quot;;</span><br><span class=\"line\">    return fun.isJSONStr(str) ? JSON.parse(str) : str;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 按key存贮数据value到localStorage</span><br><span class=\"line\"> * @param &#123;String&#125; key   存贮数据的唯一标识</span><br><span class=\"line\"> * @param &#123;String, Object&#125; value 所要存贮的数据</span><br><span class=\"line\"> */</span><br><span class=\"line\">export const set = (key, value) =&gt; &#123;</span><br><span class=\"line\">    if (!value) delete window.localStorage[key];</span><br><span class=\"line\">    else &#123;</span><br><span class=\"line\">        const val = typeof value === &quot;object&quot; ? JSON.stringify(value) : value;</span><br><span class=\"line\">        window.localStorage[key] = val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"vue 微信引导下载思路","slug":"vue-微信引导下载思路"},"next":{"title":"深拷贝 && 浅拷贝","slug":"深拷贝-浅拷贝"},"link":"http://yoursite.com/post/常用的工具方法util/"}