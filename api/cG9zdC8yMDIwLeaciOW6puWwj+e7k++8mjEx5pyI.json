{"title":"2020-月度小结：11 月","date":"2020-11-24T02:12:19.000Z","slug":"2020-月度小结：11月","tags":["总结"],"categories":["总结"],"updated":"2020-12-09T05:37:55.059Z","content":"<h4 id=\"React-forwardRef-和-connect-的联合使用问题\"><a href=\"#React-forwardRef-和-connect-的联合使用问题\" class=\"headerlink\" title=\"React.forwardRef 和 connect 的联合使用问题\"></a>React.forwardRef 和 connect 的联合使用问题</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let Component = (props)=&gt;&#123;</span><br><span class=\"line\">    const &#123;refInstance&#125; = props;</span><br><span class=\"line\">    //  只要是实例都行useForm和useRef创建的都可以</span><br><span class=\"line\">    const [form] = Form.useForm();</span><br><span class=\"line\">    useImperativeHandle(refInstance,()=&gt;(&#123;</span><br><span class=\"line\">       submit:()=&gt;&#123;</span><br><span class=\"line\">          form.submit();</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">    return (</span><br><span class=\"line\">       &lt;&gt;xxx&lt;/&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;；</span><br><span class=\"line\">Component = connect(xxx, xxx)&#123;Component&#125;;</span><br><span class=\"line\">//注意：这里不要在Component上使用ref;换个属性名字比如refInstance；不然会导致覆盖</span><br><span class=\"line\">export default React.forwardRef( (props,ref) =&gt; &lt;Component  &#123;...props&#125;  refInstance=&#123;ref&#125; /&gt;);</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://zhuanlan.zhihu.com/p/211472921\" target=\"_blank\" rel=\"noopener\">参考</a></p>\n<h4 id=\"小程序用-npm-下载包（Component-is-not-found-in-path-“path-to-vant-we”）\"><a href=\"#小程序用-npm-下载包（Component-is-not-found-in-path-“path-to-vant-we”）\" class=\"headerlink\" title=\"小程序用 npm 下载包（Component is not found in path “path/to/vant-we”）\"></a>小程序用 npm 下载包（Component is not found in path “path/to/vant-we”）</h4><ol>\n<li>下载 miniprogram 依赖</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i miniprogram-sm-crypto --production</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><p>勾选使用 npm 模块</p>\n</li>\n<li><p>构建 npm 模块， 生成 miniprogram_npm 文件夹</p>\n</li>\n<li><p>npm init</p>\n</li>\n<li><p>…</p>\n</li>\n</ol>\n<p><a href=\"https://www.cnblogs.com/swt-axios/p/13091449.html\" target=\"_blank\" rel=\"noopener\">参考</a></p>\n<h4 id=\"删除-node-modules-文件\"><a href=\"#删除-node-modules-文件\" class=\"headerlink\" title=\"删除 node modules 文件\"></a>删除 node modules 文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install rimraf -g</span><br><span class=\"line\">rimraf node_modules</span><br></pre></td></tr></table></figure>\n<h4 id=\"react-图片验证码\"><a href=\"#react-图片验证码\" class=\"headerlink\" title=\"react 图片验证码\"></a>react 图片验证码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img</span><br><span class=\"line\">    style=&#123;&#123;</span><br><span class=\"line\">        width: &quot;80px&quot;,</span><br><span class=\"line\">        height: &quot;40px&quot;,</span><br><span class=\"line\">        cursor: &quot;pointer&quot;,</span><br><span class=\"line\">    &#125;&#125;</span><br><span class=\"line\">    onClick=&#123;getCodeImg&#125;</span><br><span class=\"line\">    src=&#123;codeImg&#125;</span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const [codeImg, setCodeImg] = useState(&quot;&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">const getCodeImg = () =&gt; &#123;</span><br><span class=\"line\">    setCodeImg(`/getImgSrc.json?id=` + Math.random());</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">// /getImgSrc.json接口返回的是一张图片</span><br></pre></td></tr></table></figure>\n<h4 id=\"useState-改变，但是没有重新渲染\"><a href=\"#useState-改变，但是没有重新渲染\" class=\"headerlink\" title=\"useState 改变，但是没有重新渲染\"></a>useState 改变，但是没有重新渲染</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const [lists,setLists] =useState([]);</span><br><span class=\"line\">         .....</span><br><span class=\"line\">const arr = lists;</span><br><span class=\"line\">arr.splice(index,1)  //根据删除index下标的这一项</span><br><span class=\"line\">setLists([...arr]);  //重复赋值要改变数组的地址</span><br></pre></td></tr></table></figure>\n<h3 id=\"数组过滤递归\"><a href=\"#数组过滤递归\" class=\"headerlink\" title=\"数组过滤递归\"></a>数组过滤递归</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">* @description: 递归数据，如果没有操作或者没有子菜单，过滤 比如工作台</span><br><span class=\"line\">* @param &#123;*&#125;</span><br><span class=\"line\">* @return &#123;*&#125;</span><br><span class=\"line\">*/</span><br><span class=\"line\">filterMenu = (arr) =&gt; &#123;</span><br><span class=\"line\">    return arr</span><br><span class=\"line\">        .filter((v) =&gt; &#123;</span><br><span class=\"line\">            return (</span><br><span class=\"line\">                (v.operation &amp;&amp; v.operation.length &gt; 0) ||</span><br><span class=\"line\">                (v.childrenMenuList &amp;&amp; v.childrenMenuList.length &gt; 0)</span><br><span class=\"line\">            );</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .map((v) =&gt; &#123;</span><br><span class=\"line\">            if (v.childrenMenuList.length &gt; 0) &#123;</span><br><span class=\"line\">                v.childrenMenuList = this.filterMenu(v.childrenMenuList);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return v;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"滚动条设置\"><a href=\"#滚动条设置\" class=\"headerlink\" title=\"滚动条设置\"></a>滚动条设置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::-webkit-scrollbar &#123;</span><br><span class=\"line\">        width: 8px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">::-webkit-scrollbar-track-piece &#123;</span><br><span class=\"line\">    width: 11px;</span><br><span class=\"line\">    /* background:#E0E4ED; */</span><br><span class=\"line\">    border-radius: 10px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">::-webkit-scrollbar-thumb &#123;</span><br><span class=\"line\">    width: 8px;</span><br><span class=\"line\">    background: #d9d9d9;</span><br><span class=\"line\">    border-radius: 10px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"react-打印\"><a href=\"#react-打印\" class=\"headerlink\" title=\"react 打印\"></a>react 打印</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save react-to-print</span><br></pre></td></tr></table></figure>\n","next":{"title":"常用的正则方法","slug":"常用的正则"},"link":"http://yoursite.com/post/2020-月度小结：11月/"}